package modelo;

import controlador.gestorPartidas;
import java.util.ArrayList;
import java.util.List;

/**
 * Clase base para todas las casillas.
 */
public abstract class Casilla {
    private final int posicion;
    private final List<Jugador> jugadoresActuales;

    /**
     * Constructor original: crea su propia lista vacía de jugadores.
     */
    public Casilla(int posicion) {
        this.posicion = posicion;
        this.jugadoresActuales = new ArrayList<>();
    }

    /**
     * Nuevo constructor: reutiliza una lista de jugadores pasada por parámetro.
     * Así coinciden las llamadas de tus subclases.
     */
    public Casilla(int posicion, List<Jugador> jugadoresActuales) {
        this.posicion = posicion;
        this.jugadoresActuales = jugadoresActuales;
    }

    /** Efecto de la casilla sobre el jugador. */
    public abstract void realizarAccion(Jugador j, gestorPartidas gp);

    /** Índice de la casilla en el tablero (0-based). */
    public int getPosicion() {
        return posicion;
    }

    /** Jugadores que están actualmente en esta casilla. */
    public List<Jugador> getJugadoresActuales() {
        return jugadoresActuales;
    }

    /** Añade un jugador a la lista interna. */
    public void añadirJugador(Jugador j) {
        jugadoresActuales.add(j);
    }

    /** Quita un jugador de la lista interna. */
    public void quitarJugador(Jugador j) {
        jugadoresActuales.remove(j);
    }
}
